Next steps:

## Implement bio.json processing.
  - Implement on submit, write out JSON file. Provide a (native) notification.
  - Might want to change submit button color on edit?
  - implement remaining sections.

## Implement github

## Implement CI with package build for releases.
  - change repo name to techfolio-designer

## Implement sanity check on file save
  - Parse YAML, make sure fields are OK.

## Misc stuff:
  - electron-util (macOS should run in app folder? https://github.com/sindresorhus/electron-util)
  - https://dzone.com/articles/learning-electron-4-things-i-wish-i-knew-sooner

## Code Mirror Spell Checker
  -


## Implement file deletion.

## Implement yaml file editing.

## ICS 491 project ideas

  - markdown previewer
  - image processing
  - "style" checker for markdown (https://jsfiddle.net/edemaine/jreeyvd2/)
  - spelling checker
  - JSON checker
  - configure text size and light/dark theme
  - implement custom validation to make simple bio editor more intelligent about acceptable field values.
  - allow bio json editor and simple editor to be open simultaneously.
  - profile and improve performance.


## Notes about initial version of designer:

Useful packages:

* electron-prebuilt-compile: Support for React, Less, ES7.
* front-matter: Parse YAML
* fs-extra: drop-in replacement for fs; provides async/await support
* jimp: image processing library
* marked: parses markdown into HTML
* nodegit: git commands in node
* octonode: github authentication and manipulation
* react-datepicker: datepicker
* electron-oauth-github: (Not currently used) electron module for authenticating your Electron app with GitHub.

Questionable packages

* html-react-parser: converts an HTML string to a React element.
* html-tidy2: clean up poorly formatted HTML
* superagent: HTTP GET, PUT, etc.

Other resources

* [GitHub Authentication for Electron](https://medium.com/linagora-engineering/using-oauth-in-an-electron-application-abb0376c2ae0)

Code notes

* secret.js needs to be dealt with somehow.

