Next steps:

## Redux
 - TechFolioFiles:  build it 'on demand' by accessing getState().dir, don't access from app instance.

## Logout
  - probably have to run the https request to logout along with removing access_token to really logout.

## Authentication
  - Investigate https://github.com/pksunkara/octonode

## Other menu item
  - display Splash window if hidden or deleted.
  - Edit config.yml file.

## Console logs -> app logging
  - search for console.logs, transition to in-app logging

## Signing the app
  - https://blog.dcpos.ch/how-to-make-your-electron-app-sexy

## File deletion
  - need to run 'git add <filename>' on deleted files.
  - no current way to delete files gracefully and get changes pushed to github.

===================  Archive ===================================

## Redux material
  - https://www.youtube.com/watch?v=sX3KeP7v7Kg

## Nodegit problems
  Node V10 blocker: https://github.com/nodegit/nodegit/issues/1490
  Required prebuilt binary:
  https://axonodegit.s3.amazonaws.com/nodegit/nodegit/nodegit-v0.22.2-electron-v2.0-darwin-x64.tar.gz

## GitHub notes:

  - https://www.npmjs.com/package/nodegit-kit#commit-repo-options
  - add all: https://github.com/nodegit/nodegit/issues/121

  - Electron OAuth authentication with GitHub:
    https://gist.github.com/paulbbauer/2add0bdf0f4342df48ea

  - electron auth wrapper:
    https://www.npmjs.com/package/electron-auth
    https://www.npmjs.com/package/electron-oauth-github

  - create credentials for oauth app with github:
    https://developer.github.com/apps/building-oauth-apps/creating-an-oauth-app/
    https://medium.com/linagora-engineering/using-oauth-in-an-electron-application-abb0376c2ae0

  - logout
    https://stackoverflow.com/questions/12909332/how-to-logout-of-an-application-where-i-used-oauth2-to-login-with-google

## Implement CI with package build for releases.

## Misc stuff:
  - electron-util (macOS should run in app folder? https://github.com/sindresorhus/electron-util)
  - https://dzone.com/articles/learning-electron-4-things-i-wish-i-knew-sooner

## Notes about initial version of designer:

Useful packages:

* electron-prebuilt-compile: Support for React, Less, ES7.
* front-matter: Parse YAML
* fs-extra: drop-in replacement for fs; provides async/await support
* jimp: image processing library
* marked: parses markdown into HTML
* nodegit: git commands in node
* octonode: github authentication and manipulation
* react-datepicker: datepicker
* electron-oauth-github: (Not currently used) electron module for authenticating your Electron app with GitHub.

Questionable packages

* html-react-parser: converts an HTML string to a React element.
* html-tidy2: clean up poorly formatted HTML
* superagent: HTTP GET, PUT, etc.

Other resources

* [GitHub Authentication for Electron](https://medium.com/linagora-engineering/using-oauth-in-an-electron-application-abb0376c2ae0)
